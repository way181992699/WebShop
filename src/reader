第一个模块步骤（商品类别的管理）：
	1.创建Web项目
	2.导入相关的工具类及jar包
	   jar: jdbc c3p0 jstl
	       工具类：BaseDao DBUtil DataSourceConfig 中文处理的过滤器
	3.数据库中创建对应的表结构及测试数据
		  创建表
		  创建序列
		  导入测试数据
     fatherid=0表示是大类
     fatherid不为0表示该类别是小类，所属的大类是fatherid的编号
	4.创建对应的javaBean  项目中一般放在 model包获取domain包
	  McType
	       成员变量(变量名小写，和表结构中字段要一模一样)
	   get和set方法
	       重写toString()
	       有参和无参构造方法
	5.创建Dao接口，声明相关的方法
	      创建接口 名称已 ‘I’ 开头 放在dao包下
	      声明 添加 修改 删除 查询的方法 并加上备注
	6.创建Dao的实现类，继承BaseDao，并实现各个方法
	7.创建Service接口，声明相关的方法
	    声明的方法和dao中的如没有特殊需要完全一样
	8.创建Service的实现类，并调用对应的Dao的方法
	    获取Dao层的实例对象
	9.创建对应的Servlet，分别实现相关的功能
	  url: /back/McTypeServlet
	10.创建对应的jsp页面，数据展示
	  新建文件back:放后台相关的jsp页面
	  McType.jsp : WebContent-->back-->mctype

将静态HTML页面添加到项目中变成动态的jsp步骤：
  1.将main.html top.html left.html index.html 该成对应的jsp页面
    放在back文件夹下
  2. 手动的创建4个对应的jsp页面，并把对应的html中的内容拷贝到jsp中
  	将jsp页面相对获取路径的方式改为绝对获取(WebContent)
  	<% String path = request.getContextPath();
		String basePath = request.getScheme()+"://"
		 +request.getServerName()+":"
		 +request.getServerPort()+path+"/";
	// http://localhost:8081/Day13_Shop/
	%>
	在head标记中添加
	<base href="<%=basePath%>">
	
添加商品类别的流程：
   1.先把要展示的界面绘制出来
   2.点击添加按钮跳转到对应的Servlet中查询出所有的商品父类
   		back/McTypeServlet?task=getFatherType&id=1&name=123 
   		？后面跟的要传递的参数 如果有多个参数 每个参数之间用&连接
            在dao中添加查询所有父类的方法
            在service中添加查询所有父类的方法
   3.跳转到添加数据的jsp页面
     给需要添加的数据放入form表单中 给每个标记添加对应的name属性
     
   4.点击保存按钮把数据提交到Servlet中
            获取表单信息 service保存数据 跳转到展示数据的界面
   5.servlet调用相关方法保存数据
商品类别的修改：
   1.打开修改界面
            点击修改按钮 --> 将该记录的id传递到servlet中
     --->在servlet根据id查询所有类别信息和所有的父类信息
     --->跳转到修改界面
   2.提交用户修改的数据
   
商品类别分页：
   1.在mc.jsp页面引入BasePage.jsp页面，同时添加form表单
     注意修改action属性
   2.导入WebUtil中的公共方法
   3.在McServlet中获取currentPage和PageSize
   
   4.把BasePage拷贝过来
   5.在McDao中添加分页查询的方法，并添加实现方法
   6.同步添加service中的方法
   7.servlet中调用Dao中方法获取结果
   8.数据放入作用域中
   9.跳转页面
   
   10.在BaseDao中拷贝分页公共方法
   11.在Dao中调用分页方法，准备相关的参数
   12.在jsp中修改数据的获取方式 page.list
   
   
   
  
  
  
  
  
  
  
  
  
	
	
	